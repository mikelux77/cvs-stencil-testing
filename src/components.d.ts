/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface BasicApiMock {
    }
    interface BasicEvent {
    }
    interface BasicFunction {
    }
    interface BasicProp {
        "creditCard": string;
        "paymentFlow": string;
    }
    interface BasicRendering {
    }
    interface BasicState {
    }
    interface ComponentSample {
    }
}
declare global {
    interface HTMLBasicApiMockElement extends Components.BasicApiMock, HTMLStencilElement {
    }
    var HTMLBasicApiMockElement: {
        prototype: HTMLBasicApiMockElement;
        new (): HTMLBasicApiMockElement;
    };
    interface HTMLBasicEventElement extends Components.BasicEvent, HTMLStencilElement {
    }
    var HTMLBasicEventElement: {
        prototype: HTMLBasicEventElement;
        new (): HTMLBasicEventElement;
    };
    interface HTMLBasicFunctionElement extends Components.BasicFunction, HTMLStencilElement {
    }
    var HTMLBasicFunctionElement: {
        prototype: HTMLBasicFunctionElement;
        new (): HTMLBasicFunctionElement;
    };
    interface HTMLBasicPropElement extends Components.BasicProp, HTMLStencilElement {
    }
    var HTMLBasicPropElement: {
        prototype: HTMLBasicPropElement;
        new (): HTMLBasicPropElement;
    };
    interface HTMLBasicRenderingElement extends Components.BasicRendering, HTMLStencilElement {
    }
    var HTMLBasicRenderingElement: {
        prototype: HTMLBasicRenderingElement;
        new (): HTMLBasicRenderingElement;
    };
    interface HTMLBasicStateElement extends Components.BasicState, HTMLStencilElement {
    }
    var HTMLBasicStateElement: {
        prototype: HTMLBasicStateElement;
        new (): HTMLBasicStateElement;
    };
    interface HTMLComponentSampleElement extends Components.ComponentSample, HTMLStencilElement {
    }
    var HTMLComponentSampleElement: {
        prototype: HTMLComponentSampleElement;
        new (): HTMLComponentSampleElement;
    };
    interface HTMLElementTagNameMap {
        "basic-api-mock": HTMLBasicApiMockElement;
        "basic-event": HTMLBasicEventElement;
        "basic-function": HTMLBasicFunctionElement;
        "basic-prop": HTMLBasicPropElement;
        "basic-rendering": HTMLBasicRenderingElement;
        "basic-state": HTMLBasicStateElement;
        "component-sample": HTMLComponentSampleElement;
    }
}
declare namespace LocalJSX {
    interface BasicApiMock {
    }
    interface BasicEvent {
        "onClickEvent"?: (event: CustomEvent<any>) => void;
        "onClickEventWithDetail"?: (event: CustomEvent<any>) => void;
        "onClickMultipleTimes"?: (event: CustomEvent<any>) => void;
    }
    interface BasicFunction {
    }
    interface BasicProp {
        "creditCard": string;
        "paymentFlow": string;
    }
    interface BasicRendering {
    }
    interface BasicState {
    }
    interface ComponentSample {
    }
    interface IntrinsicElements {
        "basic-api-mock": BasicApiMock;
        "basic-event": BasicEvent;
        "basic-function": BasicFunction;
        "basic-prop": BasicProp;
        "basic-rendering": BasicRendering;
        "basic-state": BasicState;
        "component-sample": ComponentSample;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "basic-api-mock": LocalJSX.BasicApiMock & JSXBase.HTMLAttributes<HTMLBasicApiMockElement>;
            "basic-event": LocalJSX.BasicEvent & JSXBase.HTMLAttributes<HTMLBasicEventElement>;
            "basic-function": LocalJSX.BasicFunction & JSXBase.HTMLAttributes<HTMLBasicFunctionElement>;
            "basic-prop": LocalJSX.BasicProp & JSXBase.HTMLAttributes<HTMLBasicPropElement>;
            "basic-rendering": LocalJSX.BasicRendering & JSXBase.HTMLAttributes<HTMLBasicRenderingElement>;
            "basic-state": LocalJSX.BasicState & JSXBase.HTMLAttributes<HTMLBasicStateElement>;
            "component-sample": LocalJSX.ComponentSample & JSXBase.HTMLAttributes<HTMLComponentSampleElement>;
        }
    }
}
